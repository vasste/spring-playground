allprojects {
    apply plugin: 'idea'

    configurations {
        ajc
        aspects
        projectJars
        implementation {
            extendsFrom aspects
            extendsFrom projectJars
        }
    }

    dependencies {
        implementation "org.springframework:spring-jdbc:$spring_v"
        implementation "org.springframework:spring-tx:$spring_v"
        implementation "org.springframework:spring-context:$spring_v"
        implementation "org.aspectj:aspectjrt:$aspectj_v"

        ajc "org.aspectj:aspectjtools:$aspectj_v"
        aspects "org.springframework:spring-aspects:$spring_v"

        compileOnly "org.jetbrains:annotations:$jb_annotations_v"
    }

    def aspectj = { destDir, aspectPath, inpath, classpath ->
        ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties",
                classpath: configurations.ajc.asPath)

        ant.iajc(
                maxmem: "1024m", fork: "true", Xlint: "ignore",
                destDir: destDir,
                aspectPath: aspectPath,
                inpath: inpath,
                classpath: classpath,
                source: project.sourceCompatibility,
                target: project.targetCompatibility
        )
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = compileJava.destinationDir
            testOutputDir = compileTestJava.destinationDir
        }
    }

    def withoutLocalBuildJars = project.sourceSets.main.runtimeClasspath - configurations.projectJars

    compileJava {
        doLast {
            println(project.sourceSets.main.runtimeClasspath.asPath)
            aspectj project.sourceSets.main.output.classesDir.absolutePath,
                    configurations.aspects.asPath,
                    project.sourceSets.main.output.classesDir.absolutePath,
                    withoutLocalBuildJars.asPath
        }
    }

    compileTestJava {
        dependsOn jar

        doLast {
            aspectj project.sourceSets.test.output.classesDir.absolutePath,
                    configurations.aspects.asPath + jar.archivePath,
                    project.sourceSets.test.output.classesDir.absolutePath,
                    withoutLocalBuildJars.asPath
        }
    }
}